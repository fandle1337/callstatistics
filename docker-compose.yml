version: '3'

services:
    apache:
        container_name: ${MODULE_CODE}_apache
        image: httpd:2.4
        volumes:
            - ./:/var/www/html
            - ./docker/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
        depends_on:
            - app

    nginx:
        container_name: ${MODULE_CODE}_nginx
        image: nginx:1.13
        ports:
            - ${DOCKER_NGINX_PORT}:80
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - apache

    app:
        user: "1000:1000"
        container_name: ${MODULE_CODE}_app
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        volumes:
            - ./:/var/www/html
            - /etc/passwd:/etc/passwd
            - /etc/groups:/etc/groups

    db:
        container_name: ${MODULE_CODE}_db
        image: mysql:8.0
        restart: always
        volumes:
            - ${DOCKER_DB_DATA_PATH}:/var/lib/mysql
        environment:
            MYSQL_DATABASE: ${DOCKER_DB_DATABASE}
            MYSQL_USER: ${DOCKER_DB_USERNAME}
            MYSQL_PASSWORD: ${DOCKER_DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DOCKER_DB_ROOT_PASSWORD}
        ports:
            - 3306
        command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: ${MODULE_CODE}_phpmyadmin
        restart: always
        ports:
            - ${DOCKER_PHPMYADMIN_PORT}:80
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: db

    npm:
        image: node:18
        container_name: npm
        volumes:
            - ./:/var/www/html
        ports:
            - 3000:3000
            - 3001:3001
        working_dir: /var/www/html
        profiles: [ "npm" ]
        entrypoint: [ "npm" ]
